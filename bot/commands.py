import hikari
import generator
import info


class Argument:
    def __init__(
            self, name: str, description: str, type: str, required: bool, *,
            range: tuple[float | int | None] = (None, None), length: tuple[int | None] = (None, None), **args):
        self.name, self.description, self.type = name, description, type
        self.required, self.range, self.length = required, range, length
        self.other = args


class Category:
    def __init__(self, id: str, name: str) -> None:
        self.id = id
        self.name = name


class Categories:
    def __init__(self) -> None:
        self.categories: list[Category] = []

    def add(self, id, name):
        self.categories.append(Category(id, name))
        return self

    def rem(self, id: str):
        for x in self.categories:
            if x.id == id:
                self.categories.remove(x)
        return self

    def get(self, id: str) -> Category | None:
        for x in range(len(self.categories)):
            if self.categories[x].id == id:
                return self.categories[x]
        raise KeyError(f"'{id}' –Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è!")

    def dict(self) -> tuple[dict[str, list], dict[str, list]]:
        dict = {}
        keys = {}
        for x in self.categories:
            dict[x.name] = []
            keys[x.id] = x.name
        return (dict, keys)


categories = Categories()
categories.add("settings", "üõ†–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
categories.add("statistics", "üìâ–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ")
categories.add("utilities", "üß±–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
categories.add("fun", "üòÉ–§–∞–Ω")
categories.add("premium", "‚≠ê–ü—Ä–µ–º–∏—É–º")
categories.add("unique", f"üî•–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ (–µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ {info.server_emoji})")
page = Argument("page", "–°—Ç—Ä–∞–Ω–∏—Ü–∞", int, False, range=(1, 100000))

generator_versions = list(generator.GeneratorVersions().versions.keys())


class Command:
    def __init__(self, name: str, description: str, arguments: list[Argument], auto_defer: bool = True, ephemeral=False, category: str | None = None, *, guilds: tuple | None = None, **kwargs):
        self.name = name
        self.description = description
        if info.beta:
            self.description += ' "–ë–µ—Ç–∞"'
        self.arguments = arguments
        self.auto_defer = auto_defer
        self.ephemeral = ephemeral
        self.guilds = guilds
        self.kwargs = kwargs
        if category is not None:
            self.category = categories.get(category)
        else:
            self.category = None


generator_info = f'–†–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ (–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {generator.default_mode})'
d: dict[str, Command] = {
    "help": Command(
        "help",
        "–ü–æ–º–æ—â—å",
        [Argument("command", "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", str, False)],
        ephemeral=True
    ),

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    "clear_db": Command(
        "clear_db",
        "–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ—Ö –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        [Argument("member", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á—å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", hikari.Member, False)],
        ephemeral=True,
        category="settings"
    ),

    "delete_from_db": Command(
        "delete_from_db",
        "–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        [Argument("message_id", "–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –µ–≥–æ ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", str, True)],
        ephemeral=True,
        category="settings"
    ),

    "switch": Command(
        "switch",
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
        []
    ),

    "switch generator_mode": Command(
        "switch generator_mode",
        "–ò–∑–º–µ–Ω—è–µ—Ç —Ä–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞",
        [Argument("mode", generator_info, str, True, choices=generator.modes_desc)],
        ephemeral=True,
        category="settings"
    ),

    "switch read_msg_content": Command(
        "switch read_msg_content",
        "–ü–æ–∑–≤–æ–ª—è–µ—Ç –±–æ—Ç—É –Ω–µ —á–∏—Ç–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–± –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ",
        [Argument("mode", "–†–µ–∂–∏–º –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö", str, True, choices=["–í–∫–ª—é—á–∏—Ç—å", "–í—ã–∫–ª—é—á–∏—Ç—å", "–ò–Ω—Ñ–æ"])],
        ephemeral=True,
        category="settings"
    ),

    "switch random_msgs": Command(
        "switch random_msgs",
        "–£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–º–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–º–∏ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —á–∞—Ç–µ",
        [Argument("mode", "–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ—Å–ª–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ", str, True, choices=["–í–∫–ª—é—á–∏—Ç—å", "–í—ã–∫–ª—é—á–∏—Ç—å"])],
        ephemeral=True,
        category="settings"
    ),

    "switch mention_to_generate": Command(
        "switch mention_to_generate",
        "–û—Ç–∫–ª—é—á–∞–µ—Ç/–í–∫–ª—é—á–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏ –±–æ—Ç–∞",
        [Argument("mode", "–í—ã–±—Ä–∞—Ç—å –±—É–¥–µ—Ç –ª–∏ –±–æ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏", str, True, choices=["–í–∫–ª—é—á–∏—Ç—å", "–í—ã–∫–ª—é—á–∏—Ç—å"])],
        ephemeral=True,
        category="settings"
    ),

    "ignored_members list": Command(
        "ignored_members list",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        [page],
        category="settings"
    ),

    "ignored_members": Command(
        "ignored_members",
        "–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",
        []
    ),

    "ignored_members check": Command(
        "ignored_members check",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ",
        [Argument("member", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –µ–≥–æ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ", hikari.Member, True)],
        ephemeral=True,
        category="settings"
    ),

    "ignored_members remove": Command(
        "ignored_members remove",
        "–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
        [Argument("member", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞", hikari.Member, True)],
        ephemeral=True,
        category="settings"
    ),

    "ignored_members add": Command(
        "ignored_members add",
        "–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫",
        [Argument("member", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", hikari.Member, True),
         Argument("reason", "–ü—Ä–∏—á–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", str, False, length=(0, 70))],
        ephemeral=True,
        category="settings"
    ),

    "ignored_members clear": Command(
        "ignored_members clear",
        "–û—á–∏—â–∞–µ—Ç —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        [],
        ephemeral=True,
        category="settings"
    ),

    "allowed_channels": Command(
        "allowed_channels",
        "–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –≥–¥–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —á–∏—Ç–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π.",
        []
    ),

    "allowed_channels list": Command(
        "allowed_channels list",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤",
        [page],
        "list",
        category="settings"
    ),

    "allowed_channels add": Command(
        "allowed_channels add",
        "–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫",
        [Argument("channel", "–ö–∞–Ω–∞–ª –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫", hikari.TextableGuildChannel, True, channel_types=[hikari.ChannelType.GUILD_TEXT])],
        "add",
        ephemeral=True,
        category="settings"
    ),

    "allowed_channels remove": Command(
        "allowed_channels remove",
        "–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞",
        [Argument("channel", "–ö–∞–Ω–∞–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞", hikari.TextableGuildChannel, True, channel_types=[hikari.ChannelType.GUILD_TEXT])],
        "remove",
        ephemeral=True,
        category="settings"
    ),

    "allowed_channels clear": Command(
        "allowed_channels clear",
        "–û—á–∏—â–∞–µ—Ç –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤",
        [],
        "clear",
        ephemeral=True,
        category="settings"
    ),
    # ## #
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    "info": Command(
        "info",
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–µ",
        []
    ),

    "info server": Command(
        "info server",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ñ–Ω–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ",
        [],
        auto_defer=True,
        category="statistics"
    ),

    "info bot": Command(
        "info bot",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ñ–Ω–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ",
        [],
        auto_defer=True,
        category="statistics"
    ),

    "leaders": Command(
        "leaders",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–æ–±—â–µ–Ω–∏–π",
        [page],
        auto_defer=True,
        category="statistics"
    ),

    "top": Command(
        "top",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏–¥–µ—Ä–±–æ—Ä–¥ —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö",
        [page, Argument("time", "–í—ã–±—Ä–∞—Ç—å –∑–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –±—É–¥–µ—Ç —Ç–æ–ø", str, False, choices=info.CHOICES["toptime"])],
        auto_defer=True,
        category="statistics"
    ),

    "most_msgs_time": Command(
        "most_msgs_time",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ –∞–∫—Ç–∏–≤–∞ –∏ –µ–≥–æ —Å–∞–º–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        [page],
        auto_defer=True,
        category="statistics"
    ),

    "msgs": Command(
        "msgs",
        "–°–∫–æ–ª—å–∫–æ –Ω–∞–ø–∏—Å–∞–ª(–∏) —Å–æ–æ–±—â–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫ –∏–ª–∏ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏",
        []
    ),

    "msgs member": Command(
        "msgs member",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏",
        [Argument("member", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", hikari.Member, False)],
        auto_defer=True,
        category="statistics"
    ),

    "msgs all": Command(
        "msgs all",
        "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è –∏–ª–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏",
        [],
        auto_defer=True,
        category="statistics"
    ),

    "msgs time": Command(
        "msgs time",
        "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –≤—Å—ë –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è",
        [Argument("date", "–î–∞—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", str, True)],
        auto_defer=True,
        category="statistics"
    ),

    "channels_top": Command(
        "channels_top",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏–¥–µ—Ä–±–æ—Ä–¥ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–æ–±—â–µ–Ω–∏–π",
        [page],
        auto_defer=True,
        category="statistics"
    ),

    "version_info": Command(
        "version_info",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞",
        [Argument("version", "–í–µ—Ä—Å–∏—è, –æ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", str, False)],
        ephemeral=True,
        category="statistics"
    ),

    "report_bug": Command(
        "report_bug",
        "–û–ø–æ–≤–µ—â–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–æ—Ç–∞ –æ –±–∞–≥–µ",
        [Argument("short_desc", "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–∞–≥–∞", str, True),
         Argument("text", "–†–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–∞–≥–∞", str, True, length=(8, 72)),
         Argument("steps", "–®–∞–≥–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–≥", str, False, length=(8, 512))],
        ephemeral=True,
        category="utilities"
    ),
    # ## #
    # –£—Ç–∏–ª–∏—Ç—ã
    "support_me": Command(
        "support_me",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –¥–µ–Ω–µ–∂–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –∞–≤—Ç–æ—Ä–∞ –±–æ—Ç–∞",
        [],
        ephemeral=True,
        category="utilities"
    ),

    "send_idea": Command(
        "send_idea",
        "–û–ø–æ–≤–µ—â–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–æ—Ç–∞ –æ –≤–∞—à–µ–π –∏–¥–µ–µ",
        [Argument("text", "–†–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∏", str, True)],
        auto_defer=True,
        category="utilities"
    ),

    "encrypt": Command(
        "encrypt",
        "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç",
        [Argument("text", "–¢–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è", str, True),
         Argument("key", "–ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è", str, False, length=(4, 128))],
        ephemeral=True,
        category="utilities"
    ),

    "decrypt": Command(
        "decrypt",
        "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç",
        [Argument("text", "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç", str, True),
         Argument("key", "–ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è", str, False, length=(4, 128))],
        ephemeral=True,
        category="utilities"
    ),

    "rep": Command(
        "rep",
        "–†–µ–ø—É—Ç–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ",
        []
    ),

    "rep give": Command(
        "rep give",
        "–í—ã–¥–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É —Ä–µ–ø—É—Ç–∞—Ü–∏—é",
        [Argument("member", "–£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã –¥–∞–¥–∏—Ç–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏", hikari.Member, True)],
        category="utilities"
    ),

    "rep take": Command(
        "rep take",
        "–ó–∞–±—Ä–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é —É —É—á–∞—Å—Ç–Ω–∏–∫—É –µ—Å–ª–∏ –≤—ã –µ–º—É –¥–∞–ª–∏",
        [Argument("member", "–£—á–∞—Å—Ç–Ω–∏–∫ —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é", hikari.Member, True)],
        category="utilities"
    ),

    "rep get": Command(
        "rep get",
        "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é —É—á–∞—Å—Ç–Ω–∏–∫–∞",
        [Argument("member", "–£—á–∞—Å—Ç–Ω–∏–∫ —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é", hikari.Member, False)],
        category="utilities"
    ),

    "rep leaders": Command(
        "rep leaders",
        "–õ–∏–¥–µ—Ä—ã –ø–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏",
        [page],
        category="utilities"
    ),

    # ## #
    # –§–∞–Ω
    "generate": Command(
        "generate",
        "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤",
        [Argument("text", '–¢–µ–∫—Å—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑ –Ω–∏—Ö (—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å "||__||")', str, False),
         Argument("minp", "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—Ä–∞–∑ (–°—Ç–∞–Ω–¥–∞—Ä—Ç: 2)", int, False, range=(1, 6)),
         Argument("maxp", "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—Ä–∞–∑ (–°—Ç–∞–Ω–¥–∞—Ä—Ç: 14)", int, False, range=(6, 20)),
         Argument("minw", "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ñ—Ä–∞–∑–µ (–°—Ç–∞–Ω–¥–∞—Ä—Ç: 3)", int, False, range=(1, 5)),
         Argument("maxw", "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ñ—Ä–∞–∑–µ (–°—Ç–∞–Ω–¥–∞—Ä—Ç: 9)", int, False, range=(5, 15)),
         Argument("start_word", "–ù–∞—á–∞–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ", str, False, length=(1, 22)),
         Argument("msgs_min_len", "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (–°—Ç–∞–Ω–¥–∞—Ä—Ç: 5)", int, False, range=(1, 32)),
         Argument("msgs_limit", "–õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (–°—Ç–∞–Ω–¥–∞—Ä—Ç: 6000)", int, False, range=(30, 6000)),
         Argument("version", "–í–µ—Ä—Å–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (OP - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω, AD - –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω)", str, False, choices=generator_versions)],
        auto_defer=True,
        category="fun"
    ),

    "random_answer": Command(
        "random_answer",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å",
        [Argument("text", "–í–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—É", str, False)],
        auto_defer=True,
        category="fun"
    ),

    "day_quote": Command(
        "day_quote",
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ü–∏—Ç–∞—Ç—É –¥–Ω—è",
        [],
        auto_defer=True,
        category="fun"
    ),

    "put_emoji_if": Command(
        "put_emoji_if",
        '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–∞/–ù–µ—Ç" —Å–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏',
        [],
        auto_defer=True,
        category="fun"
    ),

    "who_say_it": Command(
        "who_say_it",
        '–ú–∏–Ω–∏-–∏–≥—Ä–∞ "–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ?"',
        [Argument("time", "–í—Ä–µ–º—è —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∫–∞–∂–µ—Ç –∫—Ç–æ –Ω–∞–ø–∏—Å–∞–ª (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)", int, False, range=(10, 300))],
        auto_defer=True,
        category="fun"
    ),
    # Premium
    "block_reactions": Command(
        "block_reactions",
        "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —ç–º–æ–¥–∑–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.",
        []
    ),

    "block_reactions add_channel": Command(
        "block_reactions add_channel",
        "–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≥–¥–µ –±—É–¥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å—Å—è —ç–º–æ–¥–∑–∏ *–ü—Ä–µ–º–∏—É–º 1*",
        [Argument("channel", "–ö–∞–Ω–∞–ª", hikari.TextableGuildChannel, True)],
        ephemeral=True,
        category="premium"
    ),

    "block_reactions rem_channel": Command(
        "block_reactions rem_channel",
        "–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≥–¥–µ –±—É–¥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å—Å—è —ç–º–æ–¥–∑–∏ *–ü—Ä–µ–º–∏—É–º 1*",
        [Argument("channel", "–ö–∞–Ω–∞–ª", hikari.TextableGuildChannel, True)],
        ephemeral=True,
        category="premium"
    ),

    "block_reactions channel_list": Command(
        "block_reactions channel_list",
        "–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –≥–¥–µ –±–ª–æ–∫–∏—Ä—É—é—Ç—å—Å—è —ç–º–æ–¥–∑–∏ *–ü—Ä–µ–º–∏—É–º 1*",
        [page],
        category="premium"
    ),

    "block_reactions add_role": Command(
        "block_reactions add_role",
        "–†–∞–∑—Ä–µ—à–∞–µ—Ç —Ä–æ–ª—å –≤ –∫–∞–Ω–∞–ª–µ –≥–¥–µ –±–ª–æ–∫–∏—Ä—É—é—Ç—å—Å—è —ç–º–æ–¥–∑–∏ *–ü—Ä–µ–º–∏—É–º 1*",
        [Argument("channel", "–ö–∞–Ω–∞–ª", hikari.TextableGuildChannel, True),
         Argument("role", "–†–æ–ª—å", hikari.Role, True)],
        ephemeral=True,
        category="premium"
    ),
    "block_reactions rem_role": Command(
        "block_reactions rem_role",
        "–£–±–∏—Ä–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é —Ä–æ–ª—å *–ü—Ä–µ–º–∏—É–º 1*",
        [Argument("channel", "–ö–∞–Ω–∞–ª", hikari.TextableGuildChannel, True),
         Argument("role", "–†–æ–ª—å", hikari.Role, True)],
        ephemeral=True,
        category="premium"
    ),

    "block_reactions role_list": Command(
        "block_reactions role_list",
        "–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ *–ü—Ä–µ–º–∏—É–º 1*",
        [Argument("channel", "–ö–∞–Ω–∞–ª", hikari.TextableGuildChannel, True), page],
        category="premium"
    ),

    "del_thread_create_msg": Command(
        "del_thread_create_msg",
        "–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è \"`–Ω–∏–∫` —Å–æ–∑–¥–∞–ª –≤–µ—Ç–∫—É\" *–ü—Ä–µ–º–∏—É–º 2*",
        [Argument("mode", "–†–µ–∂–∏–º", str, True, choices=["–í–∫–ª—é—á–∏—Ç—å", "–í—ã–∫–ª—é—á–∏—Ç—å"])],
        ephemeral=True,
        category="premium"
    ),

    "del_pin_add_msg": Command(
        "del_pin_add_msg",
        "–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è \"`–Ω–∏–∫` –ø—Ä–∏–∫—Ä–µ–ø–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ\" *–ü—Ä–µ–º–∏—É–º 2*",
        [Argument("mode", "–†–µ–∂–∏–º", str, True, choices=["–í–∫–ª—é—á–∏—Ç—å", "–í—ã–∫–ª—é—á–∏—Ç—å"])],
        ephemeral=True,
        category="premium"
    ),
    # ## #
    "most_active_members": Command(
        "most_active_members",
        "–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞",
        [page],
        ephemeral=False,
        category="unique"
    ),
    "activity_points": Command(
        "activity_points",
        "–°–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞",
        [Argument("member", "–£—á–∞—Å—Ç–Ω–∏–∫ —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤", hikari.Member, False)],
        ephemeral=False,
        category="unique"
    ),
    # Activity
    # "character": Command(
    #     "character",
    #     "–°—Ç–∞—Ç—É—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥",
    #     [Argument("member", "–£–∫–∞–∂–∏—Ç–µ —É –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", hikari.Member, False)],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "new_character": Command(
    #     "new_character",
    #     "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
    #     [Argument("name", "–ò–º—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–∏–º—è –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç —Å–º–µ–Ω–∏—Ç—å)", str, False)],
    #     ephemeral=True,
    #     category="unique"
    # ),
    # "bank balance": Command(
    #     "bank balance",
    #     "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –≤ –±–∞–Ω–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
    #     [Argument("member", "–£—á–∞—Å—Ç–Ω–∏–∫ —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –≤ –±–∞–Ω–∫–µ", str, False)],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "bank deposit": Command(
    #     "bank deposit",
    #     "–ü–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫",
    #     [Argument("amount", "–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫", float, True, range=(0, 2**16))],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "bank withdraw": Command(
    #     "bank withdraw",
    #     "–í—ã–≤–µ—Å—Ç–∏ –∏–∑ –±–∞–Ω–∫–∞",
    #     [Argument("amount", "–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω–µ–≥ –∏–∑ –±–∞–Ω–∫–∞", float, True, range=(0, 2**16))],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "eat": Command(
    #     "eat",
    #     "–ö—É–ø–∏—Ç—å –∏ —Å—Ä–∞–∑—É —Å—å–µ—Å—Ç—å –µ–¥—É",
    #     [Argument("food", "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—å–µ—Å—Ç—å", str, True, autocomplete=True)],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "work": Command(
    #     "work",
    #     "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ",
    #     [],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "casino": Command(
    #     "casino",
    #     "–ü–æ–∫—Ä—É—Ç–∏—Ç—å –∫–∞–∑–∏–Ω–æ",
    #     [Argument("bet", "–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞", int, True, range=(25, 2**16))],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "pay": Command(
    #     "pay",
    #     "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É",
    #     [Argument("member", "–£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏", hikari.Member, True),
    #      Argument("amount", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É", int, True, range=(5, 2**16))],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "sleep": Command(
    #     "sleep",
    #     "–ü–æ—Å–ø–∞—Ç—å (3 —á–∞—Å–∞ —Å–Ω–∞ = +50 —ç–Ω–µ—Ä–≥–∏–∏)",
    #     [Argument("hours", "–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂ –±—É–¥–µ—Ç —Å–ø–∞—Ç—å", int, True, range=(0, 10)),
    #      Argument("minutes", "–°–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –±—É–¥–µ—Ç —Å–ø–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂", int, False, range=(0, 59))],
    #     ephemeral=False,
    #     category="unique"
    # ),
    # "inventory": Command(
    #     "inventory",
    #     "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å",
    #     [page],
    #     ephemeral=True,
    #     category="unique"
    # )
    # Rank
    # "rank": Command(
    #     "rank",
    #     "akdawiudhwafyugwad",
    #     [Argument("member", "adawdawd", hikari.Member, False)],
    #     ephemeral=True,
    #     category="premium"
    # ),

    # "leaderboard": Command(
    #     "leaderboard",
    #     "akdawiudhwafyugwad",
    #     [page],
    #     ephemeral=True,
    #     category="premium"
    # ),

    # "rank_settings": Command(
    #     "rank_settings",
    #     "awdawdawd",
    #     [],
    #     ephemeral=True
    # )
}

types_translation = {
    hikari.TextableGuildChannel: "—Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª",
    hikari.Member: "—É—á–∞—Å—Ç–Ω–∏–∫",
    str: "—Å—Ç—Ä–æ–∫–∞",
    int: "—á–∏—Å–ª–æ",
    float: "–Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ",
    hikari.User: "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
    hikari.GuildChannel: "–∫–∞–Ω–∞–ª",
    hikari.GuildNewsChannel: "–∫–∞–Ω–∞–ª –Ω–æ–≤–æ—Å—Ç–µ–π",
    hikari.GuildVoiceChannel: "–≤–æ–π—Å",
    hikari.Role: "—Ä–æ–ª—å"
}


def to_cmds():
    dict, ids = categories.dict()
    for x in d:
        command: Command = d[x]
        if command.category is not None:
            dict[ids[command.category.id]].append(command.name)
    return dict


def cmd_description(command_name: str):
    if command_name in d:
        command = d[command_name]
        return command.description
    else:
        return None


def arg_description(command_name: str, argument_name: str):
    if command_name in d:
        command = d[command_name]
        for argument in command.arguments:
            if argument.name == argument_name:
                return argument.description


def generate_help(command_name, color):
    if command_name in d:
        command = d[command_name]
        help_text = f"**–ö–æ–º–∞–Ω–¥–∞:** `{command.name}`\n\n{command.description}\n\n**–ê—Ä–≥—É–º–µ–Ω—Ç—ã:**\n"

        if len(command.arguments) > 0:
            for argument in command.arguments:
                help_text += f"- **{argument.name}** ({types_translation.get(argument.type, argument.type)})"
                help_text += " (–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)" if argument.required else ""
                help_text += f"\n - {argument.description}\n"

                if argument.range != (None, None):
                    help_text += f" - –î–∏–∞–ø–∞–∑–æ–Ω: {argument.range[0]} - {argument.range[1]}\n"

                if argument.length != (None, None):
                    help_text += f" - –î–ª–∏–Ω–∞: {argument.length[0]} - {argument.length[1]}\n"
        else:
            help_text += "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"

        embed = hikari.Embed(
            title=f"–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ {command_name}",
            description=help_text,
            color=color
        )
        return embed
    else:
        return "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
